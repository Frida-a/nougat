de the entire message? 3. (b)(1 point) Compute and draw the optimal Huffman code tree. 4. (c)(1 point) What is the number of bits needed to encode the entire message using the Huffman code? 5. (d)(2 points) Write pseudocode for an algorithm that takes a Huffman tree and outputs the letters in descending order of frequency. It should run \(O(k)\) time, where \(k\) is the size of the alphabet.