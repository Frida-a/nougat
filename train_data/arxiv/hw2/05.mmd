## 4 Programming: Sortedness (15 points)

Follow this https://classroom.github.com/a/K5V7mQ6CGitHub Classroom link to accept the assignment. Your code should be pushed to GitHub; do not include it here.

After completing the sortedness test in sortedness.py, complete the following.

* *From test_sortedness.py use generate_array(n, \(\epsilon\)) to create almost-sorted arrays of size \(n=1,000,000\).
* *Values for \(\epsilon\) should vary starting at \(10^{-1}\) down to \(10^{-5}\) by multiplying with \(10^{-1/2}\) every time.
* *On **each** of the generated arrays run your isEpsilonSorted function 100 times with the **same list** of \(\epsilon\)-values as the one you used to generate the arrays and count how many times it returned sorted.
* *For each array, plot the probability of isEpsilonSorted returning sorted and the \(\epsilon\)-value you used. The \(\epsilon\)-axis should be in logarithmic scale (use semilogx). What do you observe?
* *Submit your plots in your GitHub Repository. Make sure that they are added to version control.